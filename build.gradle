import java.util.regex.Matcher
import java.util.regex.Pattern
import java.util.stream.Collectors

plugins {
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'java'
	id 'groovy'
	id 'checkstyle'
}

group = 'com.mtjb'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {

	implementation 	'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 	'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 	'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.apache.groovy:groovy-all:4.0.22'

	implementation 'com.h2database:h2'
	implementation 'com.microsoft.sqlserver:mssql-jdbc'

	compileOnly 		group: 'org.projectlombok', name: 'lombok', version: '1.18.32'
	annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.32'

	testImplementation 'org.testcontainers:testcontainers:1.19.8'
	testImplementation 'org.testcontainers:mssqlserver:1.19.8'

	testImplementation('org.spockframework:spock-core:2.4-M4-groovy-4.0')
	testImplementation('org.spockframework:spock-spring:2.4-M4-groovy-4.0')
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

checkstyle {
	toolVersion = '10.12.2'
	maxWarnings = 0
	maxErrors = 0
}

task checkstyleChangedFiles(type: Checkstyle) {
	group = 'verification'
	description = 'Custom Checkstyle task which checks files that have been modified.'
	classpath = configurations.checkstyle

	maxWarnings = 0
	maxErrors = 0

	List<String> changedFiles = getChangedFiles()
	source = changedFiles
}

/**
 * Get all files that are changed but not deleted nor renamed.
 * Compares to master or the specified target branch.
 *
 * @return list of all changed files
 */
static def getChangedFiles() {
	// Get the target branch
	def ghTargetBranch = System.getenv("GITHUB_BASE_REF")

	// Get list of all changed files including status
	def systemOutStream = new ByteArrayOutputStream()
	def command = "git diff --name-status --diff-filter=dr main"
	command.execute().waitForProcessOutput(systemOutStream, System.err)
	def allFiles = systemOutStream.toString().trim().split('\n')
	systemOutStream.close()

	// Remove the status prefix
	Pattern filePattern = Pattern.compile("src(.+)")
	List<String> files = []
	for (file in allFiles) {
		Matcher matcher = filePattern.matcher(file)
		if (matcher.find()) {
			files.add("src" + matcher.group(1))
		}
	}

	// Return the list of touched src files
	if (!files.isEmpty()) {
		println("${files.size()} files modified; \n${files.stream().collect(Collectors.joining("\n"))}")
	}
	files
}